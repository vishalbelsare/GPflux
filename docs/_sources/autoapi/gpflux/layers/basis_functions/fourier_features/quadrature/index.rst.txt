:py:mod:`gpflux.layers.basis_functions.fourier_features.quadrature`
===================================================================

.. py:module:: gpflux.layers.basis_functions.fourier_features.quadrature

.. autoapi-nested-parse::

   A kernel's features and coefficients using quadrature Fourier features (QFF). 



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   gaussian/index.rst


Package Contents
----------------

.. py:class:: QuadratureFourierFeatures(kernel: gpflow.kernels.Kernel, n_components: int, **kwargs: Mapping)

   Bases: :py:obj:`gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   :param kernel: kernel to approximate using a set of Fourier bases.
   :param n_components: number of components (e.g. Monte Carlo samples,
       quadrature nodes, etc.) used to numerically approximate the kernel.

   .. py:method:: build(self, input_shape: gpflux.types.ShapeType) -> None

      Creates the variables of the layer.
      See `tf.keras.layers.Layer.build()
      <https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer#build>`_.


   .. py:method:: _compute_bases(self, inputs: gpflow.base.TensorType) -> tensorflow.Tensor

      Compute basis functions.

      :return: A tensor with the shape ``[N, 2M^D]``.


   .. py:method:: _compute_constant(self) -> tensorflow.Tensor

      Compute normalizing constant for basis functions.

      :return: A tensor with the shape ``[2M^D,]``



